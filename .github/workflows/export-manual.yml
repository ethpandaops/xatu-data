name: Manual Table Export

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        type: choice
        options:
          - staging
          - production
      table:
        description: 'Table name'
        required: true
        type: string
      network:
        description: 'Network'
        required: true
        type: choice
        options:
          - mainnet
          - holesky
          - sepolia
      date:
        description: 'Date (YYYY-MM-DD) for daily/hourly tables'
        required: false
        type: string
      force:
        description: 'Force re-export even if file exists'
        type: boolean
        default: false
      dry_run:
        description: 'Dry run only'
        type: boolean
        default: false

jobs:
  export:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      
      - name: Export single table
        env:
          # Production secrets
          CLICKHOUSE_PASSWORD: ${{ secrets.CLICKHOUSE_PASSWORD }}
          EXPERIMENTAL_CLICKHOUSE_PASSWORD: ${{ secrets.EXPERIMENTAL_CLICKHOUSE_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # Staging secrets
          CLICKHOUSE_STAGING_PASSWORD: ${{ secrets.CLICKHOUSE_STAGING_PASSWORD }}
          EXPERIMENTAL_CLICKHOUSE_STAGING_PASSWORD: ${{ secrets.EXPERIMENTAL_CLICKHOUSE_STAGING_PASSWORD }}
          STAGING_AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          STAGING_AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
        run: |
          ARGS="-e ${{ inputs.environment }} -t ${{ inputs.table }} -n ${{ inputs.network }}"
          
          if [ -n "${{ inputs.date }}" ]; then
            ARGS="$ARGS -d ${{ inputs.date }}"
          fi
          
          if [ "${{ inputs.force }}" = "true" ]; then
            ARGS="$ARGS --force"
          fi
          
          if [ "${{ inputs.dry_run }}" = "true" ]; then
            ARGS="$ARGS --dry-run"
          fi
          
          echo "Running: python scripts/export_table.py $ARGS"
          python scripts/export_table.py $ARGS
      
      - name: Export summary
        if: always()
        run: |
          echo "### Export Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Environment: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- Table: ${{ inputs.table }}" >> $GITHUB_STEP_SUMMARY
          echo "- Network: ${{ inputs.network }}" >> $GITHUB_STEP_SUMMARY
          echo "- Date: ${{ inputs.date || 'latest' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Force: ${{ inputs.force }}" >> $GITHUB_STEP_SUMMARY
          echo "- Dry Run: ${{ inputs.dry_run }}" >> $GITHUB_STEP_SUMMARY